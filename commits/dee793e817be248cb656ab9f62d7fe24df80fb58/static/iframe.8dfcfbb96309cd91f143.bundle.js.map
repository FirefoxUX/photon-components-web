{"version":3,"file":"static/iframe.8dfcfbb96309cd91f143.bundle.js","sources":["webpack:///./components/Input/index.js"],"sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./index.css\";\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    const { type = \"text\" } = props;\n    this.state = {\n      type,\n      value: \"\",\n      hasContent: false,\n    };\n  }\n\n  render() {\n    const {\n      type: originalType,\n      onChange: originalOnChange, // eslint-disable-line no-unused-vars\n      icon = null,\n      label = null,\n      warning = false,\n      error = false,\n      ...props\n    } = this.props;\n\n    const { type = \"text\", value, hasContent } = this.state;\n\n    const isPassword = originalType == \"password\";\n\n    const style = {};\n    if (icon) {\n      style[\"--icon\"] = `url(${icon})`;\n    }\n\n    const classNameWithMods = (pre = \"\", post = \"\") =>\n      classNames(`${pre}${post}`, {\n        [`${pre}--icon${post}`]: icon,\n        [`${pre}--warning${post}`]: warning,\n        [`${pre}--error${post}`]: error,\n      });\n\n    return (\n      <label {...{ style, className: classNameWithMods(\"input\") }}>\n        {label && <span className=\"input__label\">{label}</span>}\n        <input\n          className={classNameWithMods(\"input\", \"__field\")}\n          onChange={this.handleOnChange}\n          {...{ type, value, ...props }}\n        />\n        {hasContent && !isPassword && this.renderClearButton()}\n        {isPassword && this.renderPasswordVisibilityButton()}\n      </label>\n    );\n  }\n\n  handleOnChange = ev => {\n    const { onChange } = this.props;\n    this.setState({\n      value: ev.target.value,\n      hasContent: ev.target.value.length > 0,\n    });\n    if (onChange) {\n      onChange(ev);\n    }\n  };\n\n  renderClearButton = () => (\n    <span className=\"input__clear\" onClick={this.handleClear}>\n      &#x24e7;\n    </span>\n  );\n\n  handleClear = () => {\n    this.setState({\n      value: \"\",\n      hasContent: false,\n    });\n  };\n\n  renderPasswordVisibilityButton = () => (\n    <span\n      className=\"input__passwordVisibility\"\n      onClick={this.togglePasswordVisibility}\n    >\n      {this.state.type === \"password\" ? (\n        <span className=\"input__passwordVisibility__hidden\">&#x1F441;</span>\n      ) : (\n        <span className=\"input__passwordVisibility__revealed\">&#x1F441;</span>\n      )}\n    </span>\n  );\n\n  togglePasswordVisibility = () =>\n    this.setState({\n      type: this.state.type === \"password\" ? \"text\" : \"password\",\n    });\n}\n\nexport default Input;\n"],"mappings":"AAKA","sourceRoot":""}